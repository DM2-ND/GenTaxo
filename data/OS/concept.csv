,label,definition
0,Segment Base,
1,Shared Name Space,
2,Software Objects,
3,Linux-Security,
4,Linux-Scheduling,
5,Kernel Threads,
6,Metropolitan Area Network,
7,CPU Scheduling Algorithms,
8,Contention,
9,Linked Scheme,
10,Steps in DMA Transfer,
11,Thread Cancellation,
12,Dispatcher,
13,Performance Issues of Tertiary Storage,
14,Device Status Table,
15,Worst Fit Strategy,
16,Distributed File Systems,
17,Interrupt Definition,
18,Soft Real Time System,
19,False Cycles,
20,Logical Formatting,
21,Linux System-History,
22,Advanced Encryption Standard,
23,Sector Slipping,
24,File-System Interface,
25,File Operations,
26,Physical Block,
27,Bit-Level Striping,
28,Win XP-File System,
29,Virtual Machines,
30,Bounded Waiting,
31,Signal,
32,Load Sharing,
33,RAID Level 0,
34,Memory Address Register,
35,Multiple-Processor Scheduling,
36,Heterogenous System,
37,Medium Access Control,
38,Program Counter,
39,LOOK Scheduling,
40,File System Implementation,
41,Linux-File Systems,
42,Simple Structure/MS-DOS layer Structure,
43,Compiler,
44,Universe,
45,Logical Clock,
46,I/O Systems Overview,
47,DEC TOPS-20,
48,File Management,
49,Deterministic Modeling,
50,File Types,
51,An Example-Cambridge CAP System,
52,Memory Mapping,
53,Contiguous Allocation,
54,Time Stamp Based Protocols,
55,Allocation of Frames Algorithms,
56,Location Independence,
57,Physical level Security Measure,
58,Speed,
59,Blocking I/O,
60,Accounting Information,
61,Master Key,
62,Critical Section Problem,
63,"First-Come First-Served Scheduling/FCFS Algorithm",
64,Virtual Memory Other Considerations,
65,Inverted Page Table,
66,Process Priority,
67,Unbounded-Buffer Producer Consumer Problem,
68,Redundancy,
69,Win2000-Environmental Subsystems,
70,I/O Subsystem,
71,Shared Libraries,
72,Cache Consistency-Server-initiated Approach,
73,Modularity,
74,Flow Control,
75,Asymmetric Clustering,
76,Global Replacement,
77,Zero Capacity,
78,Capability-Based Systems,
79,Atlas,
80,OS Overview,
81,Request Resource,
82,Asymmetric Multiprocessing,
83,Resource Allocation,
84,Test And Set Instruction,
85,Waiting Time,
86,Network Socket Interface,
87,Streams,
88,Time Quantum/Time Slice,
89,CPU Protection,
90,File Systems-Efficiency and Performance,
91,Hard Real Time System,
92,Immutable-Shared-Files Semantics,
93,Distributed Systems-Communication,
94,Shortest-seek-time-first Disk Scheduling algorithm,
95,Distributed Operating System,
96,Conservative Timestamp Ordering Scheme,
97,Raising an Interrupt,
98,Paging,
99,Logical Address,
100,Cache Management,
101,Break Hold and Wait,
102,RAID level 0+1,
103,Protection Domain,
104,Distributed O.S-Types,
105,Two-Phase Commit Protocol,
106,Indexed Access,
107,Kernel I/O Subsystem,
108,Context Switch,
109,File Systems,
110,Burst Time,
111,Raw Disk,
112,Disk Attachment,
113,Historical Perspective,
114,Disk Formatting,
115,Routing Table,
116,Resource Sharing,
117,Pthread API,
118,Computation Speedup,
119,Grappling Hook/Bootstrap Vector Program,
120,Access Matrix with Copy-Rights,
121,Election Algorithms,
122,Network Layer,
123,OS Jobs,
124,Non-volatile Storage,
125,On-disk Structures,
126,Indexed Allocation,
127,Example-Linux,
128,Target Thread,
129,Timestamp,
130,Ready Queue,
131,Block and Character Devices,
132,Win2000-System Components,
133,Page Fault Trap,
134,RAID Level 4/Block-interleaved Parity Organization,
135,Counting Based Page Replacement Algorithm,
136,Green Threads,
137,Write-Through Policy,
138,Synchronous Signal,
139,Distributed File Systems-Example:Andrew File System,
140,I/O Bus,
141,Operating System level Security Measure,
142,Immutable Shared Files,
143,CPU Scheduling Criteria,
144,Log Structured File System,
145,Kernel Mailbox,
146,Asynchronous Signal,
147,Orphan Detection and Elimination,
148,Hierarchial Storage Management,
149,Adaptive Mutex,
150,Overview of AFS,
151,Application Layer,
152,Degree of Multiprogramming,
153,Bytecodes,
154,SCAN Disk Scheduling Algorithm/Elevator Algorithm,
155,Stateful File Service,
156,File Allocation Table,
157,I/O Interlock,
158,Head Crash,
159,Domain Structure,
160,Public Key,
161,Network Structure,
162,Semaphore Usage,
163,I/O Scheduling,
164,Distributed System,
165,Private Key,
166,Running State,
167,Write-On-Close Policy,
168,Reply Message,
169,Block-Level Striping,
170,Message Passing Model,
171,Timestamp Ordering Scheme,
172,Turnstile,
173,Storage Management,
174,Physical Layer,
175,Asymmetric Multiprocessing,
176,Win XP-Environmental Subsystems,
177,Blocking Send-Receive,
178,Access Matrix with Control-Rights,
179,Java Virtual Machine,
180,Win XP-History,
181,Basic Concepts-CPU Scheduling,
182,Microkernels,
183,Hit Ratio,
184,Stream Head,
185,Name Server,
186,Double Buffering,
187,Synchronization,
188,System Design and Implementation,
189,Partial Revocation,
190,Audit-trail Processing,
191,Multithreaded,
192,Bounded Buffer problem,
193,Raw I/O,
194,Thread Specific Data,
195,System Development Time,
196,Trap Door,
197,Synchronous I/O Interrupts,
198,Control Statements,
199,Non-Blocking Send-Receive,
200,Local Descriptor Table,
201,Global Descriptor Table,
202,Interprocess Communication,
203,Resource Preemption,
204,I/O Operations,
205,Dynamic Storage Allocation,
206,Single-Coordinator Approach,
207,Convoy Effect,
208,Pure Demand Paging,
209,Real time O.S/Systems,
210,Many-to-One Model,
211,Constant Linear Velocity,
212,Entry Section,
213,Break Circular Wait,
214,Immediate Revocation,
215,Win2000-Programmer Interface,
216,Mutual Exclusion with Test And Set,
217,Virtual File Systems,
218,Context Switch Time,
219,LPC,
220,Network Attached Storage,
221,Web Based Computing,
222,Cause of Thrashing,
223,Data-out Register,
224,Caching Vs Remote Services,
225,Deadlock State,
226,RAID Level 1,
227,File Attributes,
228,Deadlocks-System Model,
229,Prepaging,
230,Additional Reference Bits Algorithm,
231,Little's Formula,
232,Communication Processors,
233,I/O System Management,
234,Real Time Processing,
235,Traditional Computing,
236,Protection System,
237,Maskable Interrupt,
238,Faulty Process,
239,Storage Structure,
240,XDS-940,
241,Boot Block,
242,Consistency Semantics in AFS,
243,Process Synchronization Definition,
244,Java Threads,
245,RPC,
246,Deadlock Avoidance Algorithms,
247,Atomicity,
248,Delayed-Write Policy,
249,Deadlock Avoidance,
250,Asynchronous Writes,
251,Directory Structure,
252,Domain of Protection,
253,Logical Memory,
254,File Management System Calls,
255,New State,
256,Transport Layer,
257,Request Queue,
258,I/O and System Performance,
259,Storage area network,
260,Working Set Model,
261,One-to-One Model,
262,Homogenous System,
263,Exclusive Locks,
264,Mean Time of Failure,
265,Modularity Based Example-Windows 200,
266,Process Management,
267,Interrupt Controller Hardware,
268,Non-Maskable Interrupt,
269,File-System Implementation,
270,Non-Preemptive SJF,
271,Paging Harware Support,
272,Preemptive SJF,
273,CPU Registers,
274,Transparency,
275,Text File,
276,Levels of File System,
277,Concurrency Control,
278,Conflict Serializable,
279,Reaquisition,
280,Message Based O.S Example-Mach,
281,Centralized Approach-Deadlock Detection,
282,Linux-Memory Management,
283,Producer Process,
284,Small Area Network,
285,Priority Inheritance Protocol,
286,Multilevel Index,
287,Stream Structure,
288,Secondary Storage Management,
289,Segmentation Sharing,
290,Source code file,
291,OS Synchronization,
292,Conditions for Deadlock,
293,Logical Block,
294,Frame Table,
295,I/O Status Information,
296,Hard Real Time O.S/System,
297,Process Synchronization,
298,Object file,
299,File open count,
300,Indefinite Blocking/Starvation,
301,Process Scheduling,
302,Firewall,
303,An Example:Multics,
304,Classic Problems of Synchronization,
305,Process Migration,
306,Reaching Agreement,
307,Cache Location Issues,
308,Scalability,
309,Ring Structure,
310,Deadlock Detection Algorithm for single Instance of each Resource Type,
311,Password Vulnerabilities,
312,File Sharing,
313,Dining Philosophers Problem,
314,Efficient Disk Use,
315,Serializability Definition,
316,Client-Server Systems,
317,Protection in Java 2,
318,Implementaion of Virtual Machine,
319,Execution Time,
320,Indirection,
321,Goals of Protoection,
322,Naming and Transparency,
323,Unsafe State,
324,Resource Reservation,
325,Non-Blocking I/O,
326,Program Execution,
327,Loader,
328,Server,
329,Signal Handling,
330,Fixed Routing,
331,Segmentation Hardware,
332,Multiple Partition Method,
333,Break No Preemption,
334,Bounded Waiting-Mutual Exclusion with Test And Set,
335,ISO Protocol Stack,
336,Certification Authority,
337,One-Time Passwords,
338,Kernel I/O Structure,
339,Readers-Writers Problem,
340,Counting Semaphores,
341,Singlethreaded Process,
342,Local Area Network,
343,Bootstrap Program Definition,
344,Linux-Design Principles,
345,Mount Point,
346,Privelaged Instructions,
347,Win XP-Networking,
348,C-SCAN Scheduling,
349,Status Register,
350,Remote Operations In NFS,
351,Cache,
352,Ethernet Packet,
353,Token,
354,Failure Modes,
355,O.S,
356,Location Independent File Identifiers,
357,Soft Real Time O.S/System,
358,The Security Problem,
359,Physical Address,
360,Counter Implementation of LRU,
361,Buffer-Overflow Attack,
362,Program Threats,
363,Aging,
364,CPU Scheduling,
365,Logical records,
366,Majority Protocol,
367,Release Resource,
368,Root Partition,
369,O.S Services,
370,Client,
371,Address Binding,
372,Volatile Storage,
373,Race Condition,
374,Removable Disks,
375,Atomic Transactions,
376,File Read,
377,Process Name,
378,Example-Windows 2000,
379,Double Caching,
380,DMA Structure,
381,Stateless File Server,
382,Buffering,
383,Distributed File Systems-Overview,
384,CPU Scheduling Algorithm Evaluation,
385,C-LOOK Scheduling,
386,Cluster,
387,Group,
388,Domain Switching,
389,Benefits of Virtual Machine,
390,Symmetric and Asymmetric Encryption Algorithm,
391,Win XP-System Components,
392,Cache Coherency and Consistency,
393,Interrupt priority Levels,
394,Distributed Systems-Communication Protocols,
395,TLB Reach,
396,Application I/O Interface,
397,Counting,
398,Symmetric Clustering,
399,File Concept,
400,Protection-Access Matrix,
401,Tripwire File Systems,
402,Best Fit Strategy,
403,Recovery from Failure,
404,Heavyweight Process,
405,Compile Time,
406,Valid/Invalid Bit,
407,Process Control System Calls,
408,Progress,
409,Communication System Calls,
410,Reliability,
411,Early Systems,
412,Memory Management Unit,
413,Compiler-Based Enforcement,
414,RAID Structure,
415,Archives,
416,Host Attached Storage Method of Disk Attachment,
417,Shared Locks,
418,Peer to Peer Systems,
419,Memory Management,
420,MULTICS,
421,Performance of Demand Paging,
422,Example-Solaris 2,
423,Kernel Data Structures,
424,Demilitarized Zone,
425,Swapping,
426,Segmentation and Fragmentation,
427,Many-to-Many Model,
428,First Fit Strategy,
429,Critical Region Construct,
430,Disk Management,
431,Demand Paging,
432,CPU Bound Process,
433,Throughput,
434,Batch Systems,
435,Directory List,
436,Swap-Swap Use,
437,Characterizations of I/O Devices,
438,Threads,
439,Hardware Objects,
440,Cancellation Points,
441,Mutual Exclsion with Semaphores,
442,Distributed Systems,
443,Job Scheduling,
444,Grouping,
445,Stack and Buffer Overflow,
446,Stack Implementation of LRU,
447,Checkpoints,
448,Network O.S,
449,Short-term Scheduler/CPU Scheduler,
450,Responsiveness,
451,Failure Handling in Two Phase Commit Protocol,
452,Computer Speedup,
453,Naming Structures,
454,Round-Robin Scheduling,
455,Pthreads,
456,Communciation Cost,
457,Session Layer,
458,Functions with pocess management,
459,Mount Protocol,
460,Network level Security Measure,
461,Solutions to Critical Section Problem,
462,Passwords,
463,Concurrent execution,
464,Page Number,
465,Critical Region Construct Implementation,
466,Happened-Before Relation,
467,Robotic Jukebox,
468,Auditing and Logging,
469,Block-Device Interface,
470,Protection,
471,Lightweight Process,
472,Monitor-Syntax,
473,File Write,
474,File Append,
475,Embedded Computing,
476,Swapping Constraints,
477,Failure of Network,
478,Tree-Structured Directories,
479,Free Space Management,
480,Encryption,
481,Distributed Systems-Network Types,
482,CPU Utilization,
483,File System-Recovery,
484,Device Management System Calls,
485,Security-An Example-Windows NT,
486,Release Message,
487,Thrashing,
488,Proportional Allocation Algorithm,
489,Conflict Phase,
490,Administrative Complexity of Naming Structures,
491,Stateful Vs Stateless Servers,
492,NFS Protocol,
493,RAID Level 2/Memory Style Error Correcting Code Organisation,
494,Relative Block Number Definition,
495,System-Call Monitoring,
496,Interactive O.S/Systems,
497,Trojan Horse,
498,Personal Identification Number(PIN),
499,Routing Strategies,
500,Data Encryption Standard,
501,Use of Cryptography,
502,Computer System Operation,
503,Cooperating Sequential Processes,
504,Routers,
505,Preemptive Priority Scheduling,
506,Multilevel Queue Scheduling,
507,CTSS,
508,Virtual Memory-Overview,
509,Security Domains,
510,Tertiary Storage Devices,
511,File Organization Module,
512,Combined Scheme,
513,Hierarchial Paging/Forward Mapped Page Table,
514,Win2000-Design Principles,
515,General Revocation,
516,Cache Update Policy,
517,Safe State,
518,Swap-Space Management,
519,I/O Hardware,
520,Indirect Communication,
521,Handheld O.S/Systems,
522,Win200-History,
523,Data-in Register,
524,Modems,
525,multimedia file,
526,Remote Method Invocation Stub,
527,Mainframe OS,
528,Dynamically Linked Libraries,
529,Mutual Exclusion with Swap,
530,Multithreading Models,
531,Dynamic Loading,
532,Synchronous Writes,
533,Virtual Address,
534,Virus,
535,FCFS Disk Scheduling Algorithm,
536,Access Control List,
537,Confinement Problem,
538,Main Memory,
539,Wide Area Networks,
540,Networking,
541,File Create,
542,Allocation Methods,
543,Segmentation,
544,Memory Management Activities,
545,Interrupts,
546,Deadlock Prevention,
547,Fila Naming,
548,Bully Algorithm,
549,Serial Schedule,
550,Binary Semaphores,
551,Page Table Base Register,
552,Global Table,
553,Service,
554,Locks-Definition,
555,Deadlock Detection Co-ordinator,
556,File Replication,
557,Log-Based Recovery,
558,Distributed Lock Manager,
559,Synchronization Hardware,
560,Memory Allocation,
561,Interrupt Driven I/O,
562,External Data Representation,
563,High Priority Process,
564,Minimum Number of Frames,
565,File System Protection,
566,Device Directory/Volume table of Contents,
567,Deadlock Detection Algorithm for several Instances of a Resource Type,
568,Fork System Call,
569,Real-Time Scheduling,
570,Shared Pages,
571,Denial of Service Attacks,
572,Keys,
573,Basic File System,
574,Computation Migration,
575,Computer Security Classifications,
576,THE,
577,Primary Storage,
578,Linked Allocation,
579,Encrypted Passwords,
580,I/O Registers,
581,Partitions and Mounting,
582,Permanent Revocation,
583,Communication in Client-Server Systems,
584,Response Time,
585,Gantt Chart,
586,Segmentation Protection,
587,File-System Mounting,
588,Access-Matrix with Owner-Rights,
589,CPU-I/O Burst Cycle,
590,Data Link Layer,
591,Priority Scheduling Algorithm,
592,Magnetic Tape,
593,An Example:Hydra,
594,Global Ordering,
595,Linux-Kernel Modules,
596,Independent Processes,
597,Security,
598,Magnetic Disks,
599,Dispatch Latency,
600,Solaris 2,
601,Windows 2000,
602,Virtual Address Space,
603,Analytic Evaluation,
604,Stable Storage,
605,Windows XP,
606,Failure of Participating Site,
607,Fragmentation,
608,Distributed Systems-Robustness,
609,Windows NT,
610,File Name,
611,Transient OS code,
612,Bit Vector/Bit Map,
613,File Sharing with Remote File Systems,
614,Swap-Space Management-Example,
615,Swap Maps,
616,LRU Approximation Page Replacement,
617,Copy on Write,
618,Thread Overview,
619,Bankers Algorithm,
620,Effective Access Time,
621,Uniform Memory Access,
622,Deadlock Characterization,
623,Page Table-Structure,
624,Detection Algorithm Usage,
625,Linux-Input and Output,
626,Privelaged Mode/System Mode,
627,Equal Allocation Algorithms,
628,Fully Distributed Approach,
629,Physical Address Space,
630,Turnaround Time,
631,Allocation of Frames,
632,Session Semantics,
633,An Example:SSL,
634,Sockets,
635,Swap Instruction,
636,Indirect Blocks,
637,Concurrent Atomic Transactions,
638,Least Recently Used Page Replacement Algorithm,
639,Scheduling Queues,
640,Signature Based Detection,
641,print file,
642,Java,
643,File Control Block,
644,I/O Protection,
645,OS Introduction,
646,Sequential Access,
647,Mailbox Set,
648,File System Structure,
649,Access Rights,
650,Shared Memory Model,
651,Static Linking,
652,Reconfiguration,
653,Process Synchronization-Overview,
654,System Calls,
655,Securing Systems and Facilities,
656,I/O Systems,
657,Win2000-Networking,
658,Storage Hierarchy,
659,Deadlocked Processes,
660,Interrupt Handler,
661,Exponential average,
662,Host Controller,
663,Programmed I/O,
664,Request Edge,
665,clocks and timers,
666,Process Coordination,
667,Directory Implementation,
668,Frames,
669,Information Maintainence System Calls,
670,Programmable Interval Timer,
671,Failure of Co-ordinator,
672,Client Stub,
673,Spawn Mechanism,
674,Address Resolution Protocol,
675,Priority Inversion,
676,Load Time,
677,Pages,
678,Memory Mapped I/O,
679,Unbound Thread,
680,Connection Oriented Sockets/TCP Sockets,
681,Thread Pools,
682,Distributed Systems-Example:Networking,
683,Error Correcting Code,
684,Process Creation,
685,Collision Detection,
686,Critical Regions,
687,Biased Protocol,
688,Shortest-Job-First Scheduling Algorithm/SJF Algorithm,
689,Enhanced Second Chance Algorithm,
690,Random Access Time,
691,User Authentication,
692,Linux-Process Management,
693,Win XP-Programmer Interface,
694,Control Register,
695,Transaction Definition,
696,Preemptive Scheduling,
697,System Structure,
698,CPU Bursts,
699,Clustered O.S/Systems,
700,Process Termination,
701,Multilevel Feedback Queue Scheduling,
702,Queuing Model,
703,Host Name,
704,Page Base Address,
705,Direct Virtual Memory Access,
706,Exec System Call,
707,Biometrics,
708,Logical Address Space,
709,Process Creation with Virtual Memory,
710,Trap Definition,
711,System Threats,
712,Resource Allocation Graph Algorithm,
713,Distributed Systems Structure,
714,Language Based Protection,
715,Assignment Edge,
716,Device Drivers,
717,Unreliable Communications,
718,Pager,
719,Backup and Restore,
720,Location Transparency,
721,System Model,
722,Exceptions,
723,Back Pointers,
724,Shared Mode Lock,
725,O-S Examples,
726,Distributed Coordination,
727,Processes,
728,Linux Threads,
729,An Example:Unix,
730,Types of Access,
731,Mass-Storage Structure,
732,Hash Table,
733,Page Offset,
734,User Threads,
735,Authentication,
736,Threading Issues,
737,Overlays,
738,Second Chance Algorithm,
739,File Pointer,
740,Direct Blocks,
741,Cryptography,
742,Memory Protection,
743,Protection-Implementation of Access Matrix,
744,Consistency Semantics,
745,Conflicting Operations,
746,Transaction Abort,
747,Single Level Directory,
748,I/O Systems,
749,FIFO Page Replacement Algorithm,
750,Data Migration,
751,Message Slots,
752,Solaris 2 Threads,
753,File Rename,
754,Fully Distributed Approach-Deadlock Detection,
755,Transaction Name,
756,Operating System Structures,
757,Deadlocks,
758,Non-Preemptive Priority Scheduling,
759,Data Structures for Bankers Algortihm,
760,Delayed Revocation,
761,Unified Virtual Memory,
762,Worms,
763,Deadlock Detection,
764,Batch Files,
765,Issues in Signal Delivery,
766,Nonreplicated Scheme,
767,Other Systems,
768,Direct Access/Relative Access,
769,Error Handling,
770,Direct Communication,
771,Access list for Objects,
772,Remainder section,
773,Page Buffering Algorithm,
774,Long-term Scheduler/Job Scheduler,
775,Schedulers,
776,Page Replacement,
777,Software Interrupt/Trap,
778,Linker,
779,Process State,
780,Process Mix,
781,Belady's Anomaly,
782,Constant Angular Velocity,
783,Partition Control Block,
784,Page Fault Rate,
785,Translation Look Aside Buffer,
786,Interrupt Vector Table,
787,RAID Level 5/Block-interleaved Distributed Parity,
788,Bound Thread,
789,Unix Semantics,
790,Paging Method,
791,Queuing-Network Analysis,
792,Cascading Termination,
793,Linux-Interprocess Communication,
794,Paired Passwords,
795,Notify Mailbox,
796,Desktop O.S/Systems,
797,Lazy Swapper,
798,File Structure,
799,OS/360,
800,Break Mutual Exclusion,
801,Gateway,
802,Time-out Scheme,
803,Swap-Space Location,
804,Protection-Revocation of Access Rights,
805,Virtual Routing,
806,Data Striping,
807,Job Queue,
808,Disk Scheduling Algorithm Selection,
809,Secondary Storage,
810,Linux System,
811,Unbounded Capacity,
812,Remote File Access,
813,Ring Algorithm,
814,Segmentation with Paging,
815,Polling,
816,Most Frequently Used Page Replacement Algorithm,
817,Sector Sparing/Forwarding,
818,Feature Migration Definition,
819,Internal Fragmentation,
820,Distributed Information Systems/Distributed Naming Services,
821,Lock-Key Mechanism,
822,RAID Level 3/Bit-interleaved Parity Organization,
823,Segment Table,
824,Distributed Systems-Design Issues,
825,Operations on Processes,
826,Naming,
827,Path-Name Translation,
828,Non-Serial Schedule,
829,Disk Structure,
830,Sustained Bandwidth/Bandwidth of a Drive,
831,Asynchronous Thread Cancellation,
832,Cycle Stealing,
833,Contiguous Memory Allocation,
834,Anomaly Detection,
835,Multiprocessor Systems/Parallel Systems/Tightly Coupled Systems,
836,Layered Approach,
837,Process Concept,
838,Deadlock Prevention,
839,Protection and Security,
840,Stream Modules,
841,Two-Level Directory,
842,Process Management,
843,Page Fault Frequency,
844,Mach,
845,Byzantine Generals Problem,
846,Presentation Layer,
847,Capability list for Domains,
848,Seed,
849,System Generation,
850,Transfer Rate,
851,Command Interpretor System,
852,Preemptive Scheme,
853,Cooperating Processes,
854,Physical Memory,
855,File Access Methods,
856,Linear List,
857,File Size,
858,Growing Phase,
859,Monitors,
860,Linked List,
861,Compaction,
862,Multiprogrammed Systems,
863,Win XP-Design Principles,
864,Repositioning within File,
865,OS Definition,
866,Case Studies,
867,Win2000-File System,
868,Time Sharing O.S/Systems,
869,Virtual Memory,
870,Mount Table Structure,
871,Boot Control Block,
872,Acyclic Path Directories,
873,Multiple Process Solutions,
874,Handling Deadlocks,
875,Packet Strategies,
876,NFS,
877,Bounded Capacity,
878,File Sharing with Multiple Users,
879,Cache-Consistency Problem,
880,Interrupt Request Line,
881,File Operations in AFS,
882,CSMA/CD,
883,Unified Buffer Cache,
884,ISO Network Message,
885,Human level Security Measure,
886,Tapes,
887,Spoofing,
888,File,
889,Spinlock,
890,Computing Environments,
891,Cache consistency-Client-initiated Approach,
892,Network Devices,
893,Local Replacement Algorithm/Priority Replacement Algorithm,
894,Preemption without Starvation,
895,Abort Processes,
896,Distributed Systems-Topology,
897,Naming Schemes,
898,TLB Miss,
899,Information Sharing,
900,Hashed Page Tables,
901,Bad Blocks,
902,File Owner,
903,Client Interface,
904,I/O to Hardware Operations,
905,Stable-Storage Implementation,
906,Centralized Approach,
907,Event Ordering,
908,Token Passing,
909,System Programs,
910,Least Frequently Used Page Replacement Algorithm,
911,File System Manipulation,
912,Transaction Co-ordinator,
913,Access Control,
914,Unique Timestamp Generation,
915,I/O Interrupts,
916,I/O Bursts,
917,Double Indirect Block Pointer,
918,Memory Management-Overview,
919,Recovery from Deadlock,
920,Direct Memory Access,
921,Main Memory Management,
922,Comitted State,
923,Exit Section,
924,Computer System Structures,
925,Low Level Formatting/Physical Formatting,
926,System Components,
927,Local Replacement,
928,RAID Level 6/P+Q Redundancy Scheme,
929,Selective Revocation,
930,Relocation Register,
931,Temporary Revocation,
932,Process Control Block,
933,Disk Scheduling,
934,Write-Ahead Logging,
935,Mutual Exclusion,
936,I/O Structure,
937,Connection Strategies,
938,Extensions to RAID,
939,Network Virtual Memory,
940,Signal Semaphore Definition,
941,General Graph Directory,
942,Consumer Process,
943,Tertiary Storage Devices,
944,Failure Detection,
945,Optimal Page Replacement Algorithm,
946,RAID Levels,
947,File Delete,
948,Child Process,
949,Synchronization in Windows 2000,
950,RC4000,
951,NFS Architecture,
952,Accounting,
953,Use Resource,
954,Wait Semaphore Definition,
955,Wait-Die Scheme,
956,Mirroring/Shadowing,
957,Intrusion Detection,
958,Linux-Network Structure,
959,Shrinking Phase,
960,Passed By Reference,
961,CPU Scheduling and Multi-Programming,
962,Non-Preemptive Scheme,
963,Tunnel,
964,Design Goals of NFS,
965,Semaphores,
966,Distributed Systems Structure Overview,
967,Rollback,
968,Wound-Wait Scheme,
969,Memory Management Information,
970,Window 2000 Threads,
971,I/O Port,
972,Benefits of Multithreading,
973,File Management Functions,
974,inode,
975,Name Resolver,
976,Resource Allocation Graph,
977,Distributed File Systems-Deadlock Handling,
978,Consistency Checking,
979,Connectionless Sockets/UDP Sockets,
980,Simulation,
981,Hardware Protection,
982,Process Scheduling Models,
983,Locking Protocol,
984,Device Queue,
